type Profile @model @key(fields:["id"]){
  id: ID!
  username: String!
  nickname: String!
  emailAddress:String!
  profileImage: [ProfileImage] @connection(keyName: "byProfile", fields: ["id"])
  hasImage: Boolean
  backgroundImage: String
  posts: [Post] @connection(keyName: "byProfile", fields: ["id"])
}

type ProfileImage @model @key(name: "byProfile", fields: ["profileID"]) {
  id: ID!
  date: String!
  number: Int!
  profileImageKey: String!
  profileID: ID!
  profile: Profile @connection(fields: ["profileID"])
}

type Post @model @key(name: "byProfile", fields: ["profileID"]) {
  id: ID!
  title: String!
  status: PostStatus!
  date: String!
  profileID: ID!
  contents: String
  image: Int
  hasImage: Boolean
  profile: Profile @connection(fields: ["profileID"])
  likes: [Like] @connection(keyName: "byPost", fields: ["id"])
  comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
}

type PostPermission @model {
  username: String!
  permission: Boolean!
}

type Comment @model @key(name: "byPost", fields: ["postID", "content"]) {
  id: ID!
  postID: ID!
  profileID: ID!
  date: String!
  name: String!
  post: Post @connection(fields: ["postID"])
  content: String!
}

type Like @model @key(name: "byPost", fields: ["postID"]) {
  id: ID!
  postID: ID!
  profileID: ID!
  like: Boolean!
  post: Post @connection(fields: ["postID"])
}

enum PostStatus {
  DRAFT
  PUBLISHED
}
